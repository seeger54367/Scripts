#!/bin/bash
#Written by seeger54367
#Takes a resume written in yaml and produces a final pdf file
##TODO Add check for yq command
ymlResume="resume.yml"
mdResume="resume.md"
pdfResume="finished_resume.pdf"
NUMARGS=$#
positionType="*"
if [ $NUMARGS -eq 0 ]; then
  sleep 0
else
  while getopts :e:f: FLAG; do
    case $FLAG in
      e) positionType=$OPTARG;;
      f) ymlResume=$OPTARG;;
      *) continue;;
    esac
  done
fi

addEmployment () {
  #If jobs have a Type value, jobs with only that type can be selected. Otherwise selects all jobs.
  results=$(yq e ".Employment[] | select(.Type == \"${positionType}\") |  .Position" "${ymlResume}")
  while IFS= read -r line; do 
    { yq e ".Employment[] | select(.Position == \"${line}\") | \"**\"+ .Position +\"** - \"+ .Company +\" \"" "${ymlResume}"; echo "\hspace*{\fill}"; yq e ".Employment[] | select(.Position == \"${line}\") | .Start +\"-\"+ .End " "${ymlResume}"; echo ""; yq e ".Employment[] | select(.Position == \"${line}\") | \"* \"+ .Tasks[]" "${ymlResume}"; echo ""; } >> "${mdResume}"
  done <<< "$results"
}

addHeading(){
  printf "\\\begin{center}\n\\\begin{large}\\\textbf{%s}\n\\\end{large}\\\end{center}" "$1" >> "${mdResume}"
}

addProjects() {
  #If projects have a Type value, projects with only that type can be selected.
  yq e '.Projects[] | "\textbf{ "+ .Name + "}'$'\n\n" + .Summary' "${ymlResume}" >> "${mdResume}"
}

addEducation() {
  { yq e '.Education[] | "\textbf{Major}: "+  .Major +" - "+ .Entity +" - GPA: "+ .GPA ' "${ymlResume}"; echo "\hspace*{\fill}"; yq e '.Education[] | .End_date' "${ymlResume}" ; echo ""; yq e '.Education[] | "Concentration: "+ .Concentration' "${ymlResume}";} >> "${mdResume}"
}

addHorizontalLine() {
  echo -e "\n----\n" >> "${mdResume}"
}

addSkills() {
  types=$(yq e '.Technical_Skills[] | .Type' "${ymlResume}")
  while IFS= read -r line; do 
    skillTypes="$(yq e ".Technical_Skills[] | select(.Type == \"${line}\") | .Skills[] +\";\"" "${ymlResume}" )"
    skills=""
     while IFS=$'\n' read -r skill; do
      skills="${skills} ${skill}"
    done  <<< "$skillTypes"
    printf "**%s**: %s\n\n" "${line}" "${skills}" >> "${mdResume}"
  done <<< "$types"
}

addTitle() {
  { yq e '"'\\begin\{center\}\\begin\{Large\}\\textbf\{'"+"'$'\n" + .Name +"'\}\\end\{Large\}$'\n"' "${ymlResume}"; yq e '.Contact.Email +" - " + .Contact.Phone +"'$'\n'\\end\{center\}'"' "${ymlResume}"; } >> "${mdResume}"
}

addSummary() {
  yq e '.Summary' "${ymlResume}"  >> "${mdResume}"
}

addActivities(){
  yq e '.Activities' "${ymlResume}" >> "${mdResume}"
}

main () {
  [[ -e "${mdResume}" ]] && truncate -s0 "${mdResume}"
  addTitle
  addHorizontalLine
  addHeading "Summary"
  addSummary
  addHeading "Education"
  addEducation
  addHeading "Employment"
  addEmployment
  addHeading "Technical Skills"
  addSkills
  addHeading "Projects"
  addProjects
  addHeading "Activities"
  addActivities
  pandoc -V geometry:margin=0.25in -o "${pdfResume}" -t latex "${mdResume}"
  exit 0
}

([[ -e "${ymlResume}" ]] && main) || (echo "Designated file doesn't exist" && exit 32)
