#!/bin/bash
#Written by seeger54367
#Takes a resume written in yaml and produces a final pdf file
ymlResume="resume.yml"
mdResume="resume.md"
pdfResume="finished_resume.pdf"
NUMARGS=$#
positionType="*"
if [ $NUMARGS -eq 0 ]; then
  sleep 0
else
  while getopts :e:f: FLAG; do
    case $FLAG in
      e) positionType=$OPTARG;;
      f) ymlResume=$OPTARG;;
    esac
  done
fi

addEmployment () {
  echo -e "\n## Employment\n" >> "${mdResume}"
  #If jobs have a Type value, jobs with only that type can be selected. Otherwise selects all jobs.
  results=$(yq e ".Employment[] | select(.Type == \"${positionType}\") |  .Position" resume.yml)
  while IFS= read -r line; do 
    yq e ".Employment[] | select(.Position == \"${line}\") | \"#### \"+ .Position +\" - \"+ .Company +\" \"+ .Start +\"-\"+ .End" "${ymlResume}" >> "${mdResume}"
    echo -e "" >> "${mdResume}"
    yq e ".Employment[] | select(.Position == \"${line}\") | \"* \"+ .Tasks[]" "${ymlResume}" >> "${mdResume}";
    echo -e "" >> "${mdResume}"
  done <<< "$results"

}

addProjects() {
  echo -e "\n## Projects\n" >> "${mdResume}"
  #If projects have a Type value, projects with only that type can be selected.
  yq e '.Projects[] | "### "+ .Name + "'$'\n" + .Summary' "${ymlResume}" >> "${mdResume}"
}

addEducation() {
  echo -e "\n## Education\n" >> "${mdResume}"
  yq e '.Education[] | .Start_date +"-"+.End_date +"'$'\n"+ .Major +" - "+ .Entity' "${ymlResume}" >> "${mdResume}"
}

addHorizontalLine() {
  echo -e "\n----\n" >> "${mdResume}"
}

addSkills() {
  echo "Skills to be added"
}

main () {
  [[ -e "${mdResume}" ]] && truncate -s0 "${mdResume}"
  yq e '"## " + .Name +"<CR>"' "${ymlResume}" >> "${mdResume}"
  addHorizontalLine
  addEducation
  addHorizontalLine
  addEmployment
  addHorizontalLine
  addProjects
  pandoc -V geometry:margin=0.75in -o "${pdfResume}" -t latex "${mdResume}"
  exit 0
}

([[ -e "${ymlResume}" ]] && main) || (echo "Designated file doesn't exist" && exit 32)
